#ifndef __UTILITIES_VERSION_CLASS_H__
#define __UTILITIES_VERSION_CLASS_H__

//==============================================================================================================================================
//	Подключение стандартных библиотек  и макросов
//==============================================================================================================================================
#include <string>

//==============================================================================================================================================
//	Подключение сторонних библиотек  и макросов
//==============================================================================================================================================
#ifdef WINDOWS_COMPILER
	#ifdef UTILITIES_SV_EXPORTS
		#define UTILITIES_SV_API  __declspec(dllexport)
		#define UTILITIES_SV_DATA __declspec(dllexport) extern
	#else
		#define UTILITIES_SV_API  __declspec(dllimport)
		#define UTILITIES_SV_DATA __declspec(dllimport) extern
	#endif
#else
	#define UTILITIES_SV_API 
	#define UTILITIES_SV_DATA extern
#endif

//==============================================================================================================================================
//	Определение класса
//==============================================================================================================================================
class utilities_version_class
{
private:
	//==========================================================================================================================================
	//	Параметры соединения
	//==========================================================================================================================================
	//	Основные параметры соединения
	//------------------------------------------------------------------------------------------------------------------------------------------
	std::string software_name;
	std::string software_file_name;
	std::string software_description;
	std::string software_version;
	std::string software_copyright;
	std::string software_date;

public:
	//==========================================================================================================================================
	//	Доступные данные и функции
	//==========================================================================================================================================
	//	Конструктор и деструктор класса
	//------------------------------------------------------------------------------------------------------------------------------------------
	UTILITIES_SV_API utilities_version_class();
	UTILITIES_SV_API ~utilities_version_class();

	//------------------------------------------------------------------------------------------------------------------------------------------
	//	Получение параметров библиотеки
	//------------------------------------------------------------------------------------------------------------------------------------------
	UTILITIES_SV_API std::string GetName();
	UTILITIES_SV_API std::string GetFileName();
	UTILITIES_SV_API std::string GetDescription();
	UTILITIES_SV_API std::string GetVersion();
	UTILITIES_SV_API std::string GetCopyright();
	UTILITIES_SV_API std::string GetDate();
};

#endif //	__UTILITIES_VERSION_CLASS_H__

//==============================================================================================================================================
//	Конец файла
//==============================================================================================================================================

